name: ContosoUniversity-Deployment

on:
  #push:
  #  branches:
  #    - main
  #  paths-ignore:
  #    - '**.yml'
  workflow_dispatch:  

env:
  BuildConfiguration: Release
  BuildPlatform: any cpu
  WebAppName: app-contosouniversity-leandro
  WebApiName: api-contosouniversity-leandro
  AZ_RG_NAME: rg-contosouniversity
  AZ_RG_LOCATION: eastus

jobs:
  run_infra:
    name: create infra
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_SP }}
    
    - name: Create Resource Group
      run: |
        if [ $(az group exists --name ${{ env.AZ_RG_NAME }}) = false ]; then
          az group create --name ${{ env.AZ_RG_NAME }} --location ${{ env.AZ_RG_LOCATION }}
        else
            echo "Resource group already exists"
        fi
        
    - name: Deploy Template
      uses: Azure/arm-deploy@v1
      with:
        resourceGroupName: ${{ env.AZ_RG_NAME }}
        region: ${{ env.AZ_RG_LOCATION }}
        template: iac/ARMTemplates/WebSite.json
        deploymentMode: Incremental
        deploymentName: 'gh-actions'
        parameters: iac/ARMTemplates/WebSite.parameters.json
          
    #- name: Azure ARM Deployment
    #  uses: Azure/cli@v1
    #  with:
    #    inlineScript: az deployment group create --resource-group ${{ env.AZ_RG_NAME }} --template-file iac/ARMTemplates/WebSite.json --parameters iac/ARMTemplates/WebSite.parameters.json
  
  run_build:
    name: run build
    runs-on: windows-latest
    needs:
      - run_infra
    steps:    
    - uses: actions/checkout@v3
    
    - uses: microsoft/setup-msbuild@v1
    
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0'

    - name: Restore
      run: dotnet restore src/ContosoUniversity.sln
    
    - name: Build
      run: dotnet build src/ContosoUniversity.sln --no-restore --configuration ${{ env.BuildConfiguration }}
    
    - name: Build ContosoUniversity.CodedUITest
      run: msbuild 'src/ContosoUniversity.CodedUITest/ContosoUniversity.CodedUITest.csproj' /p:configuration='${{ env.BuildConfiguration }}' /p:platform='${{ env.BuildPlatform }}'
    
    - name: Test
      run: dotnet test src/ContosoUniversity.Test/ContosoUniversity.Test.csproj --configuration ${{ env.BuildConfiguration }}
    
    - name: Publish API
      run: dotnet publish src/ContosoUniversity.API/ContosoUniversity.API.csproj --no-restore --no-build --configuration ${{ env.BuildConfiguration }} --output PublishApi
    
    - name: Publish APP
      run: dotnet publish src/ContosoUniversity.WebApplication/ContosoUniversity.WebApplication.csproj --no-restore --no-build --configuration ${{ env.BuildConfiguration }} --output PublishApp
    
    - name: Publish Artifact - WebApp
      uses: actions/upload-artifact@v3
      with:
        path: PublishApp
        name: WebApp
    
    - name: Publish Artifact - WebApi
      uses: actions/upload-artifact@v3
      with:
        path: PublishApi
        name: WebApi
    
    - name: Publish Artifact - CodedUITest
      uses: actions/upload-artifact@v3
      with:
        path: 'src/ContosoUniversity.CodedUITest/bin/${{ env.BuildConfiguration }}/net6.0/**/*'
        name: CodedUITest
  
  deploy_dev:
    name: deploy to dev
    runs-on: windows-latest
    needs:
      - run_build
    environment:
      name: contosouniversity-dev
    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_SP }}
    
    - name: Download WebApp artifact
      uses: actions/download-artifact@v3
      with:
        name: WebApp
        path: app-package
    
    - name: Download WebApi artifact
      uses: actions/download-artifact@v3
      with:
        name: WebApi
        path: api-package
    
    - name: Deploy WebApi
      uses: Azure/webapps-deploy@v2
      with:
        app-name: ${{ env.WebApiName }}
        package: api-package
        slot-name: dev
    
    #- name: Configure App Settings WebApi
    #  uses: azure/appservice-settings@v1
    #  with:
    #    app-name: ${{ env.WebApiName }}
    #    slot-name: dev
    #    app-settings-json: '${{ vars.APP_SETTINGS_API }}'

    - name: Deploy WebApp
      uses: Azure/webapps-deploy@v2
      with:
        app-name: ${{ env.WebAppName }}
        package: app-package
        slot-name: dev
    
    #- name: Configure App Settings WebApp
    #  uses: azure/appservice-settings@v1
    #  with:
    #    app-name: ${{ env.WebAppName }}
    #    slot-name: dev
    #    app-settings-json: '${{ vars.APP_SETTINGS_APP }}'
  
  deploy_hml:
    name: deploy to hml
    runs-on: windows-latest
    needs:
      - deploy_dev
    environment:
      name: contosouniversity-qa
    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_SP }}
    
    - name: Download WebApp artifact
      uses: actions/download-artifact@v3
      with:
        name: WebApp
        path: app-package
    
    - name: Download WebApi artifact
      uses: actions/download-artifact@v3
      with:
        name: WebApi
        path: api-package
    
    - name: Deploy WebApi
      uses: Azure/webapps-deploy@v2
      with:
        app-name: ${{ env.WebApiName }}
        package: api-package
        slot-name: hml
    
    - name: Deploy WebApp
      uses: Azure/webapps-deploy@v2
      with:
        app-name: ${{ env.WebAppName }}
        package: app-package
        slot-name: hml
  
  deploy_prd:
    name: deploy to prd
    runs-on: windows-latest
    needs:
      - deploy_hml
    environment:
      name: contosouniversity-prd
    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_SP }}
    
    - name: Download WebApp artifact
      uses: actions/download-artifact@v3
      with:
        name: WebApp
        path: app-package
    
    - name: Download WebApi artifact
      uses: actions/download-artifact@v3
      with:
        name: WebApi
        path: api-package
    
    - name: Deploy WebApi
      uses: Azure/webapps-deploy@v2
      with:
        app-name: ${{ env.WebApiName }}
        package: api-package
    
    - name: Deploy WebApp
      uses: Azure/webapps-deploy@v2
      with:
        app-name: ${{ env.WebAppName }}
        package: app-package
